{"version":3,"sources":["components/Icons.jsx","components/SearchBox.jsx","libs/giphy.js","libs/clientStore.js","libs/appParams.js","components/GIFGallery.jsx","libs/clipboard.js","components/UISections.jsx","SkriphyApp.js","serviceWorker.js","index.js"],"names":["IconSVGLink","className","xmlns","height","viewBox","width","d","fill","IconSVGClear","IconSVGSearch","IconSVGInvertTheme","IconSVGLoader","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fillRule","transform","stroke","strokeWidth","attributeName","type","from","to","dur","repeatCount","cx","cy","r","SearchBox","searchInputValue","setSearchInputValue","initiateGiphyAPISearchOnTerm","isSearchActionAllowed","length","name","placeholder","value","onChange","e","val","target","disabled","onClick","preventDefault","console","log","extractPropertiesFromAPIImageObject","giphyImageObject","itemId","url","urlGIFOriginal","images","original","urlGIFDownsized","downsized","urlGIFPreview","preview_gif","urlGIFFixedHeight","fixed_height","urlGIFFixedWidth","fixed_width","urlGIFFixedWidth_Height","getSearchURL","apiKey","searchTerm","propTypes","PropTypes","string","STORAGE_KEY","saveAppTheme","appTheme","localStorage","setItem","API_STATUS","APP_THEME","GIFGallery","giphyGalleryItems","hiddenItemIds","removeItemById","map","indexOf","key","GIFImageItem","style","opacity","src","alt","loading","onLoad","document","getElementById","transition","title","text","dummy","createElement","body","appendChild","select","execCommand","removeChild","copyTextToClipboard","SectionStateIdle","SectionAPIKeyWarning","SectionAPIError","errorMessage","SectionAPILoading","SectionHeader","resetApp","toggleAppTheme","SectionFooter","giphyAPIKey","setAPIKey","SectionGallery","apiResults","apiResultsHiddenIds","visibleSearchResultsCount","SkriphyApp","useState","setAppTheme","setSearchTerm","searchLastPerformedTimestamp","setSearchLastPerformedTimestamp","setApiResults","setApiResultsHiddenIds","apiLoadingStatus","setAPILoadingStatus","setErrorMessage","setGiphyAPIKey","useEffect","localGiphyAPIKey","getItem","localImageObjectsStringified","localImageObjects","JSON","parse","localHiddenImageIdsStringified","localHiddenImageIds","localSearchTerm","localAppTheme","clientStore","window","scrollTo","top","behavior","setTimeout","searchURL","giphy","axios","then","response","imagesData","searchAPIData","data","imageObjects","stringify","catch","errorMsg","isAPIKeyEntered","term","Date","now","updatedHiddenImageIds","updatedHiddenIds","updatedHiddenIdsUniqueSet","Set","updatedHiddenIdsUnique","APIKey","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a780e880.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// SVG icons from https://material.io/resources/icons/\r\nexport const IconSVGLink = () => (\r\n  <svg\r\n    className=\"icon svg\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24\"\r\n  >\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const IconSVGClear = () => (\r\n  <svg\r\n    className=\"icon svg\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24\"\r\n  >\r\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n\r\nexport const IconSVGSearch = () => (\r\n  <svg\r\n    className=\"icon svg\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24\"\r\n  >\r\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n\r\nexport const IconSVGInvertTheme = () => (\r\n  <svg\r\n    className=\"icon svg\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24\"\r\n  >\r\n    <path d=\"M24 0H0v24h24z\" fill=\"none\" />\r\n    <path d=\"M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31C7.9 20.8 9.95 21.58 12 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z\" />\r\n  </svg>\r\n);\r\n\r\n// Source: https://samherbert.net/svg-loaders/\r\nexport const IconSVGLoader = () => (\r\n  <svg\r\n    className=\"icon animated\"\r\n    width=\"38\"\r\n    height=\"38\"\r\n    viewBox=\"0 0 38 38\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <defs>\r\n      <linearGradient x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\" id=\"a\">\r\n        <stop stopColor=\"#000\" stopOpacity=\"0\" offset=\"0%\" />\r\n        <stop stopColor=\"#000\" stopOpacity=\".631\" offset=\"63.146%\" />\r\n        <stop stopColor=\"#000\" offset=\"100%\" />\r\n      </linearGradient>\r\n    </defs>\r\n    <g fill=\"none\" fillRule=\"evenodd\">\r\n      <g transform=\"translate(1 1)\">\r\n        <path\r\n          d=\"M36 18c0-9.94-8.06-18-18-18\"\r\n          id=\"Oval-2\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth=\"2\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 18 18\"\r\n            to=\"360 18 18\"\r\n            dur=\"0.9s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n        <circle fill=\"#fff\" cx=\"36\" cy=\"18\" r=\"1\">\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 18 18\"\r\n            to=\"360 18 18\"\r\n            dur=\"0.9s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { IconSVGSearch, IconSVGClear } from \"./Icons\";\r\n\r\nconst MIN_SEARCH_TERM_CHARS = 3;\r\n\r\nexport const SearchBox = ({\r\n  searchInputValue,\r\n  setSearchInputValue,\r\n  initiateGiphyAPISearchOnTerm,\r\n}) => {\r\n  const isSearchActionAllowed =\r\n    searchInputValue.length > 0 &&\r\n    searchInputValue.length >= MIN_SEARCH_TERM_CHARS;\r\n  return (\r\n    <form className=\"giphy-search-form\">\r\n      <label className=\"search-input-label\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          name=\"searchInput\"\r\n          placeholder=\"Search for Giphies...\"\r\n          value={searchInputValue}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            setSearchInputValue(val);\r\n          }}\r\n        />\r\n      </label>\r\n      <div className=\"search-actions\">\r\n        <button\r\n          disabled={!isSearchActionAllowed}\r\n          className=\"btn submit\"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            if (isSearchActionAllowed) {\r\n              initiateGiphyAPISearchOnTerm(searchInputValue);\r\n            } else {\r\n              console.log(\"Search term too short!\");\r\n            }\r\n          }}\r\n        >\r\n          <IconSVGSearch />\r\n        </button>\r\n        <button\r\n          disabled={searchInputValue.length === 0}\r\n          className=\"btn clear-search\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSearchInputValue(\"\");\r\n          }}\r\n        >\r\n          <IconSVGClear />\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nSearchBox.propTypes = {\r\n  searchInputValue: PropTypes.string,\r\n  setSearchInputValue: PropTypes.func,\r\n  initiateGiphyAPISearchOnTerm: PropTypes.func,\r\n};\r\n","/**\r\n * Handles the GIPHY API, by translating the response to Javascript data.\r\n */\r\n\r\nimport PropTypes from \"prop-types\";\r\n/**\r\n * Extract useful properties from a GIF image object (GIPHY API).\r\n * // https://developers.giphy.com/docs/api/schema\r\n * @param {*} giphyImageObject\r\n */\r\nexport function extractPropertiesFromAPIImageObject(giphyImageObject) {\r\n  return {\r\n    itemId: giphyImageObject?.id,\r\n    url: giphyImageObject?.url,\r\n    urlGIFOriginal: giphyImageObject?.images?.original?.url,\r\n    urlGIFDownsized: giphyImageObject?.images?.downsized?.url,\r\n    urlGIFPreview: giphyImageObject?.images?.preview_gif?.url,\r\n    urlGIFFixedHeight: giphyImageObject?.images?.fixed_height?.url,\r\n    urlGIFFixedWidth: giphyImageObject?.images?.fixed_width?.url,\r\n    urlGIFFixedWidth_Height: giphyImageObject?.images?.fixed_width?.height,\r\n  };\r\n}\r\n\r\nexport function extractImagesObjectFromAPISearch(searchAPIData) {\r\n  const imagesData = searchAPIData?.data?.data;\r\n  return imagesData;\r\n}\r\n\r\nexport function getSearchURL(apiKey, searchTerm) {\r\n  const searchURL = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${searchTerm}`;\r\n  return searchURL;\r\n}\r\ngetSearchURL.propTypes = {\r\n  apiKey: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n};\r\n","// Handle the data storage on the client side (i.e. localStorage)\r\n\r\nconst STORAGE_KEY = {\r\n  GIPHY_API_KEY: \"giphyAPIKey\",\r\n  IMAGE_OBJECTS: \"imageObjects\",\r\n  HIDDEN_IMAGE_IDS: \"hiddenImageIds\",\r\n  SEARCH_TERM: \"searchTerm\",\r\n  APP_THEME: \"appTheme\",\r\n};\r\n\r\nexport function getDataFromLocal() {\r\n  const localGiphyAPIKey =\r\n    localStorage.getItem(STORAGE_KEY.GIPHY_API_KEY) ?? \"\";\r\n  const localImageObjectsStringified = localStorage.getItem(\r\n    STORAGE_KEY.IMAGE_OBJECTS\r\n  );\r\n  const localImageObjects = localImageObjectsStringified\r\n    ? JSON.parse(localImageObjectsStringified)\r\n    : [];\r\n  const localHiddenImageIdsStringified = localStorage.getItem(\r\n    STORAGE_KEY.HIDDEN_IMAGE_IDS\r\n  );\r\n  const localHiddenImageIds = localHiddenImageIdsStringified\r\n    ? JSON.parse(localHiddenImageIdsStringified)\r\n    : [];\r\n  const localSearchTerm = localStorage.getItem(STORAGE_KEY.SEARCH_TERM) ?? \"\";\r\n\r\n  const localAppTheme = localStorage.getItem(STORAGE_KEY.APP_THEME) ?? \"\";\r\n\r\n  return {\r\n    localGiphyAPIKey,\r\n    localImageObjects,\r\n    localHiddenImageIds,\r\n    localSearchTerm,\r\n    localAppTheme\r\n  };\r\n}\r\n\r\nexport function saveNewSearchDataToLocal({ searchTerm, imageObjects }) {\r\n  localStorage.setItem(STORAGE_KEY.IMAGE_OBJECTS, JSON.stringify(imageObjects));\r\n  localStorage.setItem(STORAGE_KEY.SEARCH_TERM, searchTerm);\r\n  localStorage.setItem(STORAGE_KEY.HIDDEN_IMAGE_IDS, \"\"); // it's a new search, remove previous hidden image data\r\n}\r\n\r\nexport function saveHiddenImageIds(updatedHiddenImageIds) {\r\n  localStorage.setItem(\r\n    STORAGE_KEY.HIDDEN_IMAGE_IDS,\r\n    JSON.stringify(updatedHiddenImageIds)\r\n  );\r\n}\r\n\r\nexport function saveAPIKey(APIKey) {\r\n  localStorage.setItem(STORAGE_KEY.GIPHY_API_KEY, APIKey);\r\n}\r\n\r\nexport function saveAppTheme(appTheme) {\r\n  localStorage.setItem(STORAGE_KEY.APP_THEME, appTheme);\r\n}\r\n\r\nexport function resetLocalDataExceptAPIKey() {\r\n  localStorage.setItem(STORAGE_KEY.IMAGE_OBJECTS, \"\");\r\n  localStorage.setItem(STORAGE_KEY.SEARCH_TERM, \"\");\r\n  localStorage.setItem(STORAGE_KEY.HIDDEN_IMAGE_IDS, \"\");\r\n}\r\n","export const API_STATUS = {\r\n  LOADING: \"loading\",\r\n  IDLE: \"idle\",\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n};\r\n\r\nexport const APP_THEME = {\r\n  LIGHT: \"light\",\r\n  DARK: \"dark\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { copyTextToClipboard } from \"../libs/clipboard.js\";\r\nimport { extractPropertiesFromAPIImageObject } from \"../libs/giphy.js\";\r\nimport { IconSVGLink, IconSVGClear } from \"./Icons\";\r\nexport const GIFGallery = ({\r\n  giphyGalleryItems,\r\n  hiddenItemIds,\r\n  removeItemById,\r\n}) => {\r\n  if (!giphyGalleryItems) return null;\r\n  else\r\n    return (\r\n      <ul className=\"items-list\">\r\n        {giphyGalleryItems.map((giphyImageObject) => {\r\n          const { itemId } = extractPropertiesFromAPIImageObject(\r\n            giphyImageObject\r\n          );\r\n\r\n          const isItemIdHidden = hiddenItemIds.indexOf(itemId) >= 0;\r\n          if (isItemIdHidden) {\r\n            return null;\r\n          } else\r\n            return (\r\n              <GIFImageItem\r\n                key={itemId}\r\n                {...{\r\n                  giphyImageObject,\r\n                  removeItemById,\r\n                }}\r\n              />\r\n            );\r\n        })}\r\n      </ul>\r\n    );\r\n};\r\nGIFGallery.propTypes = {\r\n  giphyGalleryItems: PropTypes.array,\r\n  hiddenItemIds: PropTypes.array,\r\n  removeItemById: PropTypes.func,\r\n};\r\n\r\nconst GIFImageItem = ({ giphyImageObject, removeItemById }) => {\r\n  const {\r\n    itemId,\r\n    url,\r\n    urlGIFFixedWidth,\r\n    urlGIFFixedWidth_Height,\r\n  } = extractPropertiesFromAPIImageObject(giphyImageObject);\r\n  return (\r\n    <li className=\"image-item\" key={itemId}>\r\n      <img\r\n        style={{ opacity: 0 }}\r\n        className=\"img\"\r\n        id={itemId}\r\n        src={urlGIFFixedWidth}\r\n        alt={urlGIFFixedWidth}\r\n        height={urlGIFFixedWidth_Height}\r\n        loading=\"lazy\"\r\n        onLoad={() => {\r\n          fadeInImg(itemId);\r\n        }}\r\n      />\r\n      <div className=\"controls\">\r\n        <button\r\n          title=\"Copy link to clipboard\"\r\n          type=\"button\"\r\n          className=\"btn copy-link\"\r\n          onClick={() => {\r\n            copyTextToClipboard(url);\r\n          }}\r\n        >\r\n          <IconSVGLink />\r\n        </button>\r\n        <button\r\n          title=\"Remove image\"\r\n          type=\"button\"\r\n          className=\"btn remove\"\r\n          onClick={() => {\r\n            removeItemById(itemId);\r\n          }}\r\n        >\r\n          <IconSVGClear />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nGIFImageItem.propTypes = {\r\n  itemId: PropTypes.string,\r\n  urlGIFPreview: PropTypes.string,\r\n  removeItemById: PropTypes.func,\r\n};\r\n\r\nfunction fadeInImg(id) {\r\n  document.getElementById(id).style.transition = \"opacity 1s\";\r\n  document.getElementById(id).style.opacity = \"1\";\r\n}\r\n","/**\r\n * Utility function, sourced from...\r\n * https://stackoverflow.com/questions/33855641/copy-output-of-a-javascript-variable-to-the-clipboard\r\n * @param {*} text\r\n */\r\nexport function copyTextToClipboard(text) {\r\n  var dummy = document.createElement(\"textarea\");\r\n  // to avoid breaking orgain page when copying more words\r\n  // cant copy when adding below this code\r\n  // dummy.style.display = 'none'\r\n  document.body.appendChild(dummy);\r\n  //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\r\n  dummy.value = text;\r\n  dummy.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(dummy);\r\n  //console.log(`Copied to clipboard ${text}`);\r\n}\r\n","import React from \"react\";\r\n\r\nimport { GIFGallery } from \"./GIFGallery\";\r\nimport { IconSVGLoader, IconSVGInvertTheme } from \"./Icons\";\r\n\r\nexport const SectionStateIdle = () => (\r\n  <div className=\"state-idle\">\r\n    <span>Search for something...</span>\r\n  </div>\r\n);\r\n\r\nexport const SectionAPIKeyWarning = () => (\r\n  <section className=\"notice warning\">\r\n    Please fill in your GIPHY API key!\r\n  </section>\r\n);\r\n\r\nexport const SectionAPIError = (errorMessage) => (\r\n  <div className=\"state-error\">\r\n    <div>Oops... there was an error with your request, maybe try again?</div>\r\n    <div>{errorMessage}</div>\r\n  </div>\r\n);\r\n\r\nexport const SectionAPILoading = () => (\r\n  <div className=\"state-loading\">\r\n    <div className=\"loader\">Searching...</div>\r\n    <div>\r\n      <IconSVGLoader />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const SectionHeader = ({ resetApp, toggleAppTheme }) => (\r\n  <header>\r\n    <h1 className=\"title\">skriphy</h1>\r\n    <div className=\"actions\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn reset-app\"\r\n        title=\"Reset all app data (except your API key)\"\r\n        onClick={resetApp}\r\n      >\r\n        Reset!\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn toggle-theme\"\r\n        title=\"Toggle theme\"\r\n        onClick={toggleAppTheme}\r\n      >\r\n        <IconSVGInvertTheme />\r\n      </button>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport const SectionFooter = ({ giphyAPIKey, setAPIKey }) => (\r\n  <footer>\r\n    <label className=\"api-key-label\">\r\n      <span>GIPHY API Key: </span>\r\n      <input\r\n        className=\"apikey-input\"\r\n        type=\"text\"\r\n        name=\"apiKeyInput\"\r\n        placeholder=\"Insert your key...\"\r\n        value={giphyAPIKey}\r\n        onChange={(e) => {\r\n          setAPIKey(e.target.value);\r\n        }}\r\n      />\r\n    </label>\r\n\r\n    <div className=\"info\">\r\n      GIPHY search by Vangelis Erotokritakis (April 2020)\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport const SectionGallery = ({\r\n  searchTerm,\r\n  apiResults,\r\n  apiResultsHiddenIds,\r\n  removeItemById,\r\n}) => {\r\n  const visibleSearchResultsCount =\r\n    apiResults.length - apiResultsHiddenIds.length;\r\n\r\n  return (\r\n    <div className=\"state-success\">\r\n      {searchTerm.length > 0 && (\r\n        <h2 className=\"title\">\r\n          Results for '{searchTerm}' ({visibleSearchResultsCount})\r\n        </h2>\r\n      )}\r\n      <GIFGallery\r\n        giphyGalleryItems={apiResults}\r\n        hiddenItemIds={apiResultsHiddenIds}\r\n        removeItemById={removeItemById}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { SearchBox } from \"./components/SearchBox\";\r\n\r\nimport * as giphy from \"./libs/giphy.js\";\r\nimport * as clientStore from \"./libs/clientStore\";\r\nimport { API_STATUS, APP_THEME } from \"./libs/appParams.js\";\r\n\r\nimport {\r\n  SectionStateIdle,\r\n  SectionAPIKeyWarning,\r\n  SectionAPIError,\r\n  SectionAPILoading,\r\n  SectionHeader,\r\n  SectionFooter,\r\n  SectionGallery,\r\n} from \"./components/UISections\";\r\n\r\nimport \"./styles/SkriphyApp.css\";\r\n\r\nfunction SkriphyApp() {\r\n  const [appTheme, setAppTheme] = useState(APP_THEME.LIGHT);\r\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  // We use a \"search last performed\" timestamp, to be able to trigger useEffect\r\n  //  repeatedly on the same search term if wanted.\r\n  const [\r\n    searchLastPerformedTimestamp,\r\n    setSearchLastPerformedTimestamp,\r\n  ] = useState(0);\r\n  const [apiResults, setApiResults] = useState([]);\r\n  const [apiResultsHiddenIds, setApiResultsHiddenIds] = useState([]);\r\n  const [apiLoadingStatus, setAPILoadingStatus] = useState(API_STATUS.IDLE);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [giphyAPIKey, setGiphyAPIKey] = useState(\"\");\r\n\r\n  const resetApp = () => {\r\n    clientStore.resetLocalDataExceptAPIKey();\r\n    setSearchInputValue(\"\");\r\n    setApiResults([]);\r\n    setApiResultsHiddenIds([]);\r\n    setAPILoadingStatus(API_STATUS.IDLE);\r\n    setAppTheme(APP_THEME.LIGHT);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const {\r\n      localGiphyAPIKey,\r\n      localImageObjects,\r\n      localHiddenImageIds,\r\n      localSearchTerm,\r\n      localAppTheme,\r\n    } = clientStore.getDataFromLocal();\r\n\r\n    if (localImageObjects) {\r\n      setApiResults(localImageObjects);\r\n      setAPILoadingStatus(API_STATUS.SUCCESS);\r\n    }\r\n    if (localSearchTerm) {\r\n      setSearchInputValue(localSearchTerm);\r\n      setSearchTerm(localSearchTerm);\r\n    }\r\n    if (localHiddenImageIds) {\r\n      setApiResultsHiddenIds(localHiddenImageIds);\r\n    }\r\n    if (localGiphyAPIKey) {\r\n      setGiphyAPIKey(localGiphyAPIKey);\r\n    }\r\n    if (localAppTheme) {\r\n      setAppTheme(localAppTheme);\r\n    }\r\n\r\n    document.title =\r\n      \"skriphy | ReactJS demo by Vangelis Erotokritakis (04/2020)\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchTerm.length > 0) {\r\n      setAPILoadingStatus(API_STATUS.LOADING);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n\r\n      const artificialDelayMilliseconds = 1200; // for simulating slower network\r\n      setTimeout(function () {\r\n        // https://developers.giphy.com/docs/api/endpoint/#search\r\n        const searchURL = giphy.getSearchURL(giphyAPIKey, searchTerm);\r\n        const searchResult = axios(searchURL);\r\n        searchResult\r\n          .then((response) => {\r\n            const imagesData = giphy.extractImagesObjectFromAPISearch(response);\r\n            if (!imagesData) {\r\n              // error in received data, not in the expected format\r\n            }\r\n            clientStore.saveNewSearchDataToLocal({\r\n              searchTerm,\r\n              imageObjects: imagesData,\r\n            });\r\n            setApiResultsHiddenIds([]);\r\n            setAPILoadingStatus(API_STATUS.SUCCESS);\r\n            setApiResults(imagesData);\r\n          })\r\n          .catch((errorMsg) => {\r\n            setAPILoadingStatus(API_STATUS.ERROR);\r\n            setErrorMessage(errorMsg);\r\n            //window.alert(errorMsg);\r\n          });\r\n      }, artificialDelayMilliseconds);\r\n    }\r\n    // Line below is to stop complaining about missing dependencies...\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchLastPerformedTimestamp]);\r\n\r\n  const removeItemById = (itemId) => {\r\n    const updatedHiddenIds = [...apiResultsHiddenIds, itemId];\r\n    const updatedHiddenIdsUniqueSet = new Set(updatedHiddenIds); // remove duplicates (Set)\r\n    const updatedHiddenIdsUnique = [...updatedHiddenIdsUniqueSet]; // back in Array\r\n    setApiResultsHiddenIds(updatedHiddenIdsUnique);\r\n    clientStore.saveHiddenImageIds(updatedHiddenIdsUnique);\r\n  };\r\n\r\n  const toggleAppTheme = () => {\r\n    if (appTheme === APP_THEME.LIGHT) {\r\n      setAppTheme(APP_THEME.DARK);\r\n      clientStore.saveAppTheme(APP_THEME.DARK);\r\n    } else {\r\n      setAppTheme(APP_THEME.LIGHT);\r\n      clientStore.saveAppTheme(APP_THEME.LIGHT);\r\n    }\r\n  };\r\n\r\n  const initiateGiphyAPISearchOnTerm = (term) => {\r\n    setSearchTerm(term);\r\n    setSearchLastPerformedTimestamp(Date.now());\r\n  };\r\n\r\n  const setAPIKey = (apiKey) => {\r\n    clientStore.saveAPIKey(apiKey);\r\n    setGiphyAPIKey(apiKey);\r\n  };\r\n\r\n  const isAPIKeyEntered = giphyAPIKey.length > 8; // something is entered, no check if key is correct!\r\n\r\n  return (\r\n    <div className={`SkriphyApp ${appTheme}`}>\r\n      <SectionHeader {...{ resetApp, toggleAppTheme }} />\r\n      <main>\r\n        {isAPIKeyEntered && (\r\n          <section className=\"giphy-search\">\r\n            <SearchBox\r\n              {...{\r\n                searchInputValue,\r\n                setSearchInputValue,\r\n                initiateGiphyAPISearchOnTerm,\r\n              }}\r\n            />\r\n          </section>\r\n        )}\r\n        {!isAPIKeyEntered && <SectionAPIKeyWarning />}\r\n        {isAPIKeyEntered && (\r\n          <Fragment>\r\n            <section className=\"search-results\">\r\n              {apiLoadingStatus === API_STATUS.IDLE && <SectionStateIdle />}\r\n              {apiLoadingStatus === API_STATUS.LOADING && <SectionAPILoading />}\r\n              {apiLoadingStatus === API_STATUS.ERROR && (\r\n                <SectionAPIError errorMessage={errorMessage} />\r\n              )}\r\n              {apiLoadingStatus === API_STATUS.SUCCESS && (\r\n                <SectionGallery\r\n                  {...{\r\n                    searchTerm,\r\n                    apiResults,\r\n                    apiResultsHiddenIds,\r\n                    removeItemById,\r\n                  }}\r\n                />\r\n              )}\r\n            </section>\r\n          </Fragment>\r\n        )}\r\n      </main>\r\n      <SectionFooter\r\n        {...{ giphyAPIKey, setAPIKey, resetApp, toggleAppTheme }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkriphyApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SkriphyApp from \"./SkriphyApp\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SkriphyApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}